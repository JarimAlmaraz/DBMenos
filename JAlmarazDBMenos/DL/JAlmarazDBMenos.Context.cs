//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JAlmarazDBMenosEntities : DbContext
    {
        public JAlmarazDBMenosEntities()
            : base("name=JAlmarazDBMenosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<Pagos> Pagos { get; set; }
    
        public virtual ObjectResult<ClienteGetAll_Result> ClienteGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClienteGetAll_Result>("ClienteGetAll");
        }
    
        public virtual int ClientesAdd(string nombre, Nullable<int> telefono, Nullable<System.DateTime> ultimo_Pago)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(int));
    
            var ultimo_PagoParameter = ultimo_Pago.HasValue ?
                new ObjectParameter("Ultimo_Pago", ultimo_Pago) :
                new ObjectParameter("Ultimo_Pago", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClientesAdd", nombreParameter, telefonoParameter, ultimo_PagoParameter);
        }
    
        public virtual ObjectResult<PagosGetByIdCliente_Result> PagosGetByIdCliente(Nullable<int> idCliente)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PagosGetByIdCliente_Result>("PagosGetByIdCliente", idClienteParameter);
        }
    
        public virtual int PagoAdd(Nullable<int> idCliente, Nullable<double> monto)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PagoAdd", idClienteParameter, montoParameter);
        }
    }
}
